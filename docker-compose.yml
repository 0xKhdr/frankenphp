services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: .docker/frankenphp/Dockerfile
      target: production
    ports:
      - "80:80"
    tmpfs:
      - /tmp/opcache:size=1G,uid=1000,gid=1000,mode=1777
      - /app/bootstrap/cache:size=512M,uid=1000,gid=1000,mode=1777
    environment:
      # FrankenPHP & Caddy
      SERVER_NAME: :80
      SERVER_ROOT: public/
      CADDY_GLOBAL_OPTIONS: servers { enable_full_duplex }
      FRANKENPHP_CONFIG: |
        worker {
          file public/frankenphp-worker.php
          num ${OCTANE_WORKERS:-6}
          env APP_ENV ${APP_ENV}
          env APP_DEBUG ${APP_DEBUG}
          env LOG_LEVEL ${LOG_LEVEL:-warning}
        }
        num_threads ${FRANKENPHP_NUM_THREADS:-8}
        max_wait_time 10s
        php_ini memory_limit 2G
        php_ini opcache.jit_buffer_size 512M
        php_ini opcache.validate_timestamps 0
        php_ini session.save_handler redis
        php_ini session.save_path "tcp://redis:6379?prefix=session_&timeout=1.5"

      # Laravel
      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
      LOG_LEVEL: ${LOG_LEVEL:-warning}

      # Database
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-laravel}
      DB_USERNAME: ${DB_USERNAME:-user}
      DB_PASSWORD: ${DB_PASSWORD:-secret}

      # Redis
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_CONNECTION: redis
      BROADCAST_DRIVER: redis
      REDIS_CLIENT: phpredis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-null}

      # Octane
      OCTANE_SERVER: frankenphp
      OCTANE_WORKERS: ${OCTANE_WORKERS:-6}

    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 15s
      timeout: 5s
      retries: 2
      start_period: 30s
    networks:
      - app-network
    restart: unless-stopped

  mysql:
    container_name: mysql
    image: mysql:8.0
    command: >
      mysqld
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb_buffer_pool_size=2G
      --max_connections=1000
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpass}
      MYSQL_DATABASE: ${DB_DATABASE:-laravel}
      MYSQL_USER: ${DB_USERNAME:-user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-rootpass}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - app-network

  redis:
    container_name: redis
    image: redis:7.2-alpine
    command: redis-server --maxmemory 1gb --maxmemory-policy allkeys-lru --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  redis-data: